<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[xdebug -- debug tool for php]]></title>
    <url>%2F2017%2F06%2F01%2Fxdebug%2F</url>
    <content type="text"><![CDATA[如果你现在的调试还是在使用var_dump()或者print_r()，那么xdebug可能会让你的调试更加得心应手，就像平常断点单步调试一样，你可以直观的看见所有的过程与值。与任何东西的学习方式一样，官方文档 永远是最好的老师： xdebug官方文档 :) 什么？你不想看英文文档？ 还好你找到了这里~下边是linux下xdebug的安装及配置方法： Step 1 下载并解压xdebug扩展包12wget https://xdebug.org/files/xdebug-2.5.4.tgztar -zxvf xdebug-2.5.4.tgz Tips： 具体下载哪个版本的包，可以到xdebug的download页面查找：download windows用户下载.dll后缀的文件，linux用户下载source包 Step 2 编译xdebug12345cd debug-2.5.4phpize（编译你要添加的扩展模块的命令）./configuremakecp modules/xdebug.so /usr/local/php-7.0.9/lib/php/extensions/no-debug-non-zts-20151012 Step 3 配置php.ini对于PHP5.3之前的版本： add: zend_extension_ts=”/wherever/you/put/it/xdebug.so” 对于PHP5.3之后的版本（我的php版本是7.0.9）： From PHP 5.3 onwards, you always need to use the zend_extension PHP.ini setting name, and not zend_extension_ts, nor zend_extension_debug. 在我的php.ini中，关于xdebug的配置如下： 其中remote_host与remote_port按照自己的需求指定。保存php.ini后重启apache或nginx。 Step 4 配置phpstorm的xdebug1. 指定xdebug port这里的port需要与php.ini配置的remote_port一致。 2. 配置DBGp ProxyIDE Key：与php.ini中xdebug.idekey相同Host：项目所在位置Port：项目监听端口 Step 5 安装chrome扩展 Xdebug helper在IDE Key中选择PhpStorm，并设置Key为PHPSTORM（与之前的xdebug.idekey相同即可） 到此为止，所有的准备工作就已经完成了，下面来测试一下~！ Step 6 测试 在phpstorm中设置代码断点，然后开启debug监听 打开浏览器中Xdebug helper的debug模式 访问存在断点的代码位置如果没问题的话，在phpstorm中应该可以看到： 进入debug控制台点击accept就可以看到debug控制台了 that’s done~!]]></content>
      <tags>
        <tag>xdebug</tag>
        <tag>php</tag>
        <tag>phpstorm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[First Step]]></title>
    <url>%2F2017%2F05%2F31%2Ffirst-blog%2F</url>
    <content type="text"><![CDATA[这是我的第一篇博文，采用了hexo + Github Pages构建博客网站，其中还用到了node.js和 git。 构建博客网站的工作并不复杂，过程就不再赘述了，给出一些建站的参考网站： Reference URL： GitPages + Hexo从0到1搭建个人博客 Hexo在github上构建免费的Web应用 NexT主题 从这篇文章开始，来看看会发生什么。]]></content>
      <tags>
        <tag>first</tag>
        <tag>构建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F05%2F31%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>